<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <assignments>
        <name>Assign_Insert_Failure_Error</name>
        <label>Assign Insert Failure Error</label>
        <locationX>1634</locationX>
        <locationY>350</locationY>
        <assignmentItems>
            <assignToReference>result</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>InsertErrorResult</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Failure</name>
        <label>Failure</label>
        <locationX>1106</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>result</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>ErrorResult</elementReference>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>SetAllBadResult</name>
        <label>SetAllBadResult</label>
        <locationX>842</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>result</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Name and City don&apos;t match expected values.</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>SetBadCityResult</name>
        <label>SetBadCityResult</label>
        <locationX>578</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>result</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>&quot;City name should be Philadelphia&quot;</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>SetBadNameResult</name>
        <label>SetBadNameResult</label>
        <locationX>314</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>result</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>&quot;Name not equal to Demo Account&quot;</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>SetSuccessResult</name>
        <label>SetSuccessResult</label>
        <locationX>50</locationX>
        <locationY>566</locationY>
        <assignmentItems>
            <assignToReference>result</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Success</stringValue>
            </value>
        </assignmentItems>
    </assignments>
    <assignments>
        <name>Setup_Account_Data</name>
        <label>Setup Account Data</label>
        <locationX>578</locationX>
        <locationY>134</locationY>
        <assignmentItems>
            <assignToReference>thisAccount.Name</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Demo Account</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>thisAccount.BillingCity</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Philadelphia</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Insert_Accounts</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>AssertRowCount</name>
        <label>AssertRowCount</label>
        <locationX>578</locationX>
        <locationY>458</locationY>
        <defaultConnector>
            <targetReference>Failure</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Success</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_Accounts.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Demo Account</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Accounts.BillingCity</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Philadelphia</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetSuccessResult</targetReference>
            </connector>
            <label>Success</label>
        </rules>
        <rules>
            <name>Bad_Name</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_Accounts.Name</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Demo Account</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Accounts.BillingCity</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Philadelphia</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetBadNameResult</targetReference>
            </connector>
            <label>Bad Name</label>
        </rules>
        <rules>
            <name>Bad_City</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_Accounts.BillingCity</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Philadelphia</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Accounts.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Demo Account</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetBadCityResult</targetReference>
            </connector>
            <label>Bad City</label>
        </rules>
        <rules>
            <name>All_Bad</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>get_Accounts.Name</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Demo Account</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>get_Accounts.BillingCity</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Phladelphia</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SetAllBadResult</targetReference>
            </connector>
            <label>All Bad</label>
        </rules>
    </decisions>
    <description>Template flow for the Declarative Test Generation package. Provides a simple example of a test flow that verifies Account insert.</description>
    <formulas>
        <name>ErrorResult</name>
        <dataType>String</dataType>
        <expression>&apos;Error - Inserted &apos; + TEXT({!InsertedRecords}) + &apos; account records. Expected &apos; + TEXT({!SetupSize})</expression>
    </formulas>
    <formulas>
        <description>Formula to return insert error text</description>
        <name>InsertErrorResult</name>
        <dataType>String</dataType>
        <expression>&quot;Error - Account Insert Failed, error returned: &quot; + {!$Flow.FaultMessage}</expression>
    </formulas>
    <interviewLabel>Test Declarative Test Template {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Test Simple Declarative Test Template</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Insert_Accounts</name>
        <label>Insert Accounts</label>
        <locationX>578</locationX>
        <locationY>242</locationY>
        <connector>
            <targetReference>get_Accounts</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Assign_Insert_Failure_Error</targetReference>
        </faultConnector>
        <inputReference>thisAccount</inputReference>
    </recordCreates>
    <recordLookups>
        <name>get_Accounts</name>
        <label>Get Results</label>
        <locationX>578</locationX>
        <locationY>350</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>AssertRowCount</targetReference>
        </connector>
        <faultConnector>
            <targetReference>Assign_Insert_Failure_Error</targetReference>
        </faultConnector>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Demo Account</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <runInMode>SystemModeWithSharing</runInMode>
    <start>
        <locationX>452</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Setup_Account_Data</targetReference>
        </connector>
    </start>
    <status>Draft</status>
    <variables>
        <name>Account</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
    <variables>
        <name>InsertedRecords</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>Name</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>result</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SetupSize</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>thisAccount</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Account</objectType>
    </variables>
</Flow>
